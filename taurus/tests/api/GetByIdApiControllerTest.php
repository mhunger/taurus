<?php
/**
 * Created by PhpStorm.
 * User: michaelhunger
 * Date: 20/02/17
 * Time: 22:49
 */

namespace taurus\tests\api;


use fitnessmanager\exercise\Exercise;
use fitnessmanager\exercise\ExerciseGroup;
use fitnessmanager\exercise\MuscleGroup;
use fitnessmanager\workout\WorkoutLocation;
use taurus\framework\api\GetByIdApiController;
use taurus\framework\api\GetEntityByIdDefaultServiceImpl;
use taurus\framework\config\TaurusContainerConfig;
use taurus\framework\Container;
use taurus\framework\mock\MockRequest;
use taurus\tests\AbstractDatabaseTest;

class GetByIdApiControllerTest extends AbstractDatabaseTest
{
    /** @var GetByIdApiController */
    private $controller;

    /**
     * @return array
     */
    function getFixtureFiles(): array
    {
        return [
            'workout_location.xml',
            'muscle_group.xml',
            'exercise_group.xml',
            'exercise.xml'
        ];
    }

    public function setUp()
    {
        /** @var GetByIdApiController $controller */
        $controller = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GETBYID_CONTROLLER);
        /** @var GetEntityByIdDefaultServiceImpl $service */
        $service = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GETBYID_SERVICE);
        $service->setEntityClass(Exercise::class);

        $controller->setGetEntityByIdService($service);
        $controller->setIdParamName('id');
        $this->controller = $controller;

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testControllerGetId()
    {
        $request = new MockRequest();
        $request->setMethod('GET');
        $request->setUrl('/exercise');
        $request->setInputBody([
            'id' => 3
        ]);

        $actualResult = $this->controller->handleRequest($request);
        $expectedResult = (new Exercise())->setId(3)->setDifficulty('hard')->setName('Pull-Up')->setVariantName('Chinup')
            ->setWorkoutLocation(
                (new WorkoutLocation())->setId(1)->setName('TUM Sportzentrum')
            )->setExerciseGroup(
                (new ExerciseGroup())->setId(1)->setName('Pullups')->setDifficulty('hard')
                    ->setMuscleGroup(
                        (new MuscleGroup())->setId(5)->setName('Back')
                    )
            );

        $this->assertEquals(
            $expectedResult,
            $actualResult,
            'Could not get the item by id'
        );
    }

}
