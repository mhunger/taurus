<?php
/**
 * Created by PhpStorm.
 * User: michaelhunger
 * Date: 20/02/17
 * Time: 22:20
 */

namespace taurus\tests\api;


use fitnessmanager\exercise\Exercise;
use taurus\framework\api\ApiBuilder;
use taurus\framework\api\GetAllEntitiesApiController;
use taurus\framework\api\GetAllEntitiesService;
use taurus\framework\api\GetByIdApiController;
use taurus\framework\api\GetEntityByIdDefaultServiceImpl;
use taurus\framework\api\SaveEntityApiController;
use taurus\framework\api\SaveEntityService;
use taurus\framework\config\TaurusContainerConfig;
use taurus\framework\Container;
use taurus\framework\routing\BasicRoute;
use taurus\tests\AbstractTaurusTest;

class ApiBuilderTest extends AbstractTaurusTest
{
    /** @var  ApiBuilder */
    private $apiBuilder;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->apiBuilder = new ApiBuilder();

    }

    public function testApiBuilderBuildGetApiWithEntityOnly()
    {

        /** @var GetByIdApiController $controller */
        $controller = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GETBYID_CONTROLLER);
        /** @var GetEntityByIdDefaultServiceImpl $service */
        $service = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GETBYID_SERVICE);
        $service->setEntityClass(Exercise::class);

        $controller->setGetEntityByIdService($service);
        $controller->setIdParamName('id');

        $expectedRoute = new BasicRoute('GET', 'exercise', $controller);
        $this->assertEquals(
            $expectedRoute,
            $this->apiBuilder->get(Exercise::class)
        );
    }

    public function testApiBuilderBuildPostApiWithEntity()
    {
        /** @var SaveEntityApiController $controller */
        $controller = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_SAVE_ENTITY_CONTROLLER);
        /** @var SaveEntityService $service */
        $service = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_SAVE_ENTITY_SERVICE);
        $service->setEntityClass(Exercise::class);
        $controller->setService($service);

        $expectedRoute = new BasicRoute('POST', 'exercise', $controller);

        $this->assertEquals(
            $expectedRoute,
            $this->apiBuilder->post(Exercise::class),
            'Could not create post route correctly'
        );
    }

    public function testApiBuilderCgetApi()
    {
        /** @var GetAllEntitiesApiController $controller */
        $controller = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GET_ALL_ENTITIES_CONTROLLER);
        /** @var GetAllEntitiesService $service */
        $service = Container::getInstance()->getService(TaurusContainerConfig::SERVICE_DEFAULT_GET_ALL_ENTITIES_SERVICE);
        $service->setEntityClass(Exercise::class);
        $controller->setGetAllEntitiesService($service);

        $expectedRoute = new BasicRoute('GET', 'exercises', $controller);

        $this->assertEquals(
            $expectedRoute,
            $this->apiBuilder->cget(Exercise::class),
            'Could not create the default api for cget correctly'
        );
    }
}
